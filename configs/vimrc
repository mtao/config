source ~/.vim/pluginrc
" Indentation stuff
set autoindent
set smartindent
set expandtab
set tabstop=4
set shiftwidth=4
filetype indent plugin on

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif
colorscheme molokai 
let g:molokai_original = 1
" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching
set ruler
set nu
noremap <silent> <Space> :silent noh<Bar>echo<CR>

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif











"-----------------------------------------------------------------------------
" Airline
"-----------------------------------------------------------------------------
let g:airline_theme = 'bubblegum'

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

"    let g:airline_left_sep = ''
"    let g:airline_left_alt_sep = ''
"    let g:airline_right_sep = ''
"    let g:airline_right_alt_sep = ''
"    let g:airline_symbols.branch = ''
"    let g:airline_symbols.readonly = ''
"    let g:airline_symbols.linenr = ''
"    let g:airline_symbols.paste = 'ρ'





" set visualbell
set foldcolumn=4
"autocmd VimEnter * NERDTree
"autocmd VimEnter * wincmd p
set nocompatible               " be iMproved
filetype off                   " required!


let g:syntastic_cpp_compiler_options = ' -std=c++1z'
let g:syntastic_cpp_compiler= 'clang++'


"au BufNewFile,BufRead *.cpp set syntax=cpp11
"au BufNewFile,BufRead *.hpp set syntax=cpp11
"au BufNewFile,BufRead *.h set syntax=cpp11
"au BufNewFile,BufRead .vimrc set syntax=vim
"set noerrorbells novisualbell t_vb=


set foldmethod=syntax
set foldlevel=20
set tags=./tags;/
syntax on


"autocmd VimEnter * wincmd p
au BufNewFile,BufRead *.tex set spell
